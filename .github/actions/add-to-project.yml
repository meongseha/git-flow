name: Create PR from Issue
on:
  issues:
    types: [opened, labeled]
permissions:
  contents: write
  pull-requests: write
  issues: read
jobs:
  create-pr-from-issue:
    runs-on: ubuntu-latest
    if: "!contains(github.event.issue.labels.*.name, 'idea')"
    steps:
      - uses: actions/checkout@v4
      - name: Get issue type and create branch name
        id: branch-name
        run: |
          LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
          TYPE="feature"
          if [[ $LABELS == *"bug"* ]]; then
            TYPE="fix"
          elif [[ $LABELS == *"enhancement"* ]]; then
            TYPE="feature"
          elif [[ $LABELS == *"documentation"* ]]; then
            TYPE="docs"
          fi
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')
          BRANCH_NAME="${TYPE}/issue-${{ github.event.issue.number }}-${ISSUE_TITLE}"
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "type=${TYPE}" >> $GITHUB_OUTPUT
      - name: Check for existing PR
        id: check-pr
        uses: actions/github-script@v7
        with:
          script: |
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${{ steps.branch-name.outputs.branch }}`
            });
            return pulls.data.length > 0 ? 'true' : 'false';
        outputs:
          exists: ${{ steps.check-pr.outputs.result }}
      - name: Create branch
        if: steps.check-pr.outputs.exists == 'false'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b ${{ steps.branch-name.outputs.branch }}
          echo "Fixes #${{ github.event.issue.number }}" > ISSUE-${{ github.event.issue.number }}.md
          git add ISSUE-${{ github.event.issue.number }}.md
          git commit -m "chore: initialize branch for #${{ github.event.issue.number }}"
          git push origin ${{ steps.branch-name.outputs.branch }}
      - name: Create Pull Request
        if: steps.check-pr.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.issue.number;
            const issueTitle = context.payload.issue.title;
            const issueBody = context.payload.issue.body;
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[WIP] ${issueTitle}`,
              body: `Resolves #${issueNumber}\n\n${issueBody || ''}`,
              head: '${{ steps.branch-name.outputs.branch }}',
              base: 'main'
            });
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['${{ steps.branch-name.outputs.type }}', 'auto-generated']
            });
      - name: Add issue to project
        if: "!contains(github.event.issue.labels.*.name, 'idea')"
        uses: actions/add-to-project@v1
        with:
          project-url: https://github.com/orgs/<your-org>/projects/<project-number>
          github-token: ${{ secrets.ADD_TO_PROJECT_PAT }}
          labeled: bug, feature, enhancement, documentation